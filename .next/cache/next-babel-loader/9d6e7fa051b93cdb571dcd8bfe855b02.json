{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport { LIST_OF_POSTS } from '../../src/schemas/queries';\nimport PostSmall from '../post/PostSmall';\nimport Loading from '../Loading';\n\nvar PostSmallList = function PostSmallList(props) {\n  var _useState = useState(null),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var postListQuery = useQuery(LIST_OF_POSTS, {\n    variables: {\n      id_list: props.posts.map(function (p) {\n        return p._id;\n      })\n    }\n  });\n\n  var queryConditions = function queryConditions() {\n    var query = postListQuery.data;\n    var reducer = posts;\n    if (!query) return null;\n    if (!query.getListOfPosts) return null;\n    if (!query.getListOfPosts.length) return query.getListOfPosts;\n    if (!reducer || !reducer.length || reducer[0]._id !== query.getListOfPosts[0]._id) return query.getListOfPosts;\n    return null;\n  };\n\n  var postList = queryConditions();\n  useEffect(function () {\n    if (postList) {\n      setPosts(postList);\n    }\n  }, [postList, props.setPostsForUFP, props]);\n  if (!posts) return __jsx(Loading, null);\n\n  if (posts && posts.length > 0) {\n    if (!posts[0].title) {\n      return __jsx(Loading, null);\n    }\n  }\n\n  var postListReady = posts.map(function (p) {\n    return __jsx(PostSmall, {\n      post: p,\n      user: p.user.username,\n      key: \"PSL\".concat(p.title)\n    });\n  });\n  return __jsx(React.Fragment, null, postListReady);\n}; // const mapStateToProps = (state) => {\n// \treturn {\n//         \n// \t}\n// }\n\n\nexport default connect(null)(PostSmallList);","map":null,"metadata":{},"sourceType":"module"}