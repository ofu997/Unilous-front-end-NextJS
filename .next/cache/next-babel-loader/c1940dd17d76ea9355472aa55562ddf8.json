{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PP from '../../styles/pages/newPostPage.module.css';\n\nconst PostImages = props => {\n  const {\n    0: imgShown,\n    1: setImgShown\n  } = useState(null);\n  const images = props.imageLinks;\n  const imagesAmt = images.length;\n  useEffect(() => {\n    if (imagesAmt > 0) setImgShown(images[0]);\n  }, [images, imagesAmt]);\n\n  const setToImgShown = src => {\n    setImgShown(src);\n  };\n\n  const HIStyle = {\n    borderColor: props.color,\n    width: '100%'\n  };\n  if (imagesAmt === 0) return null;else if (imagesAmt === 1) {\n    return __jsx(\"div\", {\n      className: PP.PPCPicturesContainer\n    }, __jsx(\"img\", {\n      style: HIStyle,\n      className: PP.PPCPicturesHighlight,\n      src: imgShown,\n      alt: \"highlight pic\"\n    }));\n  } else {\n    const imageOptions = images.map(i => i === imgShown ? __jsx(\"img\", {\n      key: `img${i}`,\n      onClick: () => setToImgShown(i),\n      className: PP.PPCPicturesInstance,\n      style: {\n        borderColor: props.color\n      },\n      src: i,\n      alt: \"pic\"\n    }) : __jsx(\"img\", {\n      key: `img${i}`,\n      onClick: () => setToImgShown(i),\n      className: PP.PPCPicturesInstance,\n      style: {\n        borderColor: '#282828'\n      },\n      src: i,\n      alt: \"pic\"\n    }));\n    return __jsx(\"div\", {\n      className: PP.PPCPicturesContainer\n    }, __jsx(\"img\", {\n      style: HIStyle,\n      className: PP.PPCPicturesHighlight,\n      src: imgShown,\n      alt: \"highlight pic\"\n    }), __jsx(\"div\", {\n      className: PP.PPCAllPicturesContainer\n    }, imageOptions));\n  }\n}; // const mapStateToProps = (state) => {\n// \treturn {\n//         \n// \t}\n// }\n\n\nexport default connect(null)(PostImages);","map":null,"metadata":{},"sourceType":"module"}