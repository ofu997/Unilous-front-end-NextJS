{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport token from './reducers/token';\nimport currentUser from './reducers/currentUser';\nimport posts from './reducers/posts';\nimport alertNotif from './reducers/alertNotif';\nimport stretchLayout from './reducers/stretchLayout';\nimport eventSearch from './reducers/eventSearch';\n\nconst bindMiddleware = middleware => {\n  if (false) {\n    const {\n      composeWithDevTools\n    } = require('redux-devtools-extension');\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nconst reducers = combineReducers({\n  token,\n  currentUser,\n  posts,\n  alertNotif,\n  stretchLayout,\n  eventSearch\n});\n\nconst store = () => createStore(reducers, bindMiddleware([thunkMiddleware]));\n\nexport default store;","map":null,"metadata":{},"sourceType":"module"}