{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const setCurrentUser = user => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_CURRENT_USER',\n      data: user\n    });\n  };\n};\nexport const setCurrentUserPosts = posts => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_CU_POSTS',\n      data: posts\n    });\n  };\n};\nexport const setCurrentUserSP = posts => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_CU_SP',\n      data: posts\n    });\n  };\n};\nexport const setCurrentUserNotifications = notifications => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_CU_NOTIFICATIONS',\n      data: notifications\n    });\n  };\n};\nexport const setPendingNotifications = amt => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_CU_PN',\n      data: amt\n    });\n  };\n};\n\nconst currentUser = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_CU_PN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pendingNotifications: action.data\n      });\n\n    case 'SET_CURRENT_USER':\n      return action.data;\n\n    case 'SET_CU_POSTS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.data\n      });\n\n    case 'SET_CU_SP':\n      if (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          savedPosts: action.data\n        });\n      }\n\n      return state;\n\n    case 'SET_CU_NOTIFICATIONS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notifications: action.data\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;","map":null,"metadata":{},"sourceType":"module"}