{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport PostSmall from '../../post/PostSmall';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ACCEPT_NOTIFICATION, DECLINE_NOTIFICATION, ANSWER_QUESTION } from '../../../src/schemas/mutations';\nimport { setCurrentUserNotifications } from '../../../redux/reducers/currentUser';\nimport { setAlert, resetAlert } from '../../../redux/reducers/alertNotif';\nimport { useField, websiteStats, triggerAlert } from '../../../src/functions/functions';\n\nvar Notif = function Notif(props) {\n  var handleError = function handleError(e) {\n    console.log(e);\n  };\n\n  var _useMutation = useMutation(ACCEPT_NOTIFICATION, {\n    onError: handleError\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      acceptNotif = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DECLINE_NOTIFICATION, {\n    onError: handleError\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      declineNotif = _useMutation4[0];\n\n  var _useMutation5 = useMutation(ANSWER_QUESTION, {\n    onError: handleError\n  }),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      answerQuestion = _useMutation6[0];\n\n  var answer = useField('text');\n\n  var handleAnswer = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, newNotifications;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return answerQuestion({\n                variables: {\n                  notificationId: props.notif._id,\n                  response: answer.fields.value\n                }\n              });\n\n            case 2:\n              result = _context.sent;\n\n              if (result) {\n                newNotifications = props.currentUser.notifications.map(function (n) {\n                  return n._id === props.notif._id ? result.data.answerQuestion : n;\n                });\n                props.setCurrentUserNotifications(newNotifications);\n                answer.reset();\n                triggerAlert('success', \"replied$: you have replied to \".concat(props.notif.userFrom.username, \"'s question\"), props.setAlert, props.resetAlert);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleAnswer() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleAccept = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var accept, newNotifications;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return acceptNotif({\n                variables: {\n                  notificationId: props.notif._id\n                }\n              });\n\n            case 2:\n              accept = _context2.sent;\n\n              if (accept) {\n                newNotifications = props.currentUser.notifications.map(function (n) {\n                  return n._id === props.notif._id ? accept.data.acceptNotification : n;\n                });\n                props.setCurrentUserNotifications(newNotifications);\n                triggerAlert('success', \"accepted$: you have accepted \".concat(props.notif.userFrom.username, \" to your team\"), props.setAlert, props.resetAlert);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleAccept() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleDecline = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var decline, newNotifications;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return declineNotif({\n                variables: {\n                  notificationId: props.notif._id\n                }\n              });\n\n            case 2:\n              decline = _context3.sent;\n\n              if (decline) {\n                newNotifications = props.currentUser.notifications.map(function (n) {\n                  return n._id === props.notif._id ? decline.data.declineNotification : n;\n                });\n                props.setCurrentUserNotifications(newNotifications);\n                triggerAlert('danger', \"declined$: you have declined \".concat(props.notif.userFrom.username, \"'s request to join\"), props.setAlert, props.resetAlert);\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDecline() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var notif = props.notif;\n  var notifStatusColor = notif.accepted === null ? 'rgb(226,184,59)' : notif.accepted ? notif.post ? 'rgb(52,166,95)' : '#8b8b8b' : 'rgb(254,52,77)';\n\n  if (notif.userFrom.username === props.currentUser.username) {\n    if (notif.accepted) {\n      if (notif.question) {\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"sent question\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"to:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userTo.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username,\n          style: {\n            margin: 0,\n            padding: 0\n          }\n        }), __jsx(\"div\", {\n          className: \"n-notif-content-secondary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"question\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.question)), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"answered\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.answer)));\n      }\n\n      if (notif.post) {\n        var GCLinkStats = websiteStats(notif.post.contactLink);\n        var cleanedLink = notif.post.contactLink.split('/')[2];\n        var skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)];\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"sent join request\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"to:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userTo.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username\n        }), __jsx(\"div\", {\n          className: \"n-notif-STJ-container\"\n        }, __jsx(\"div\", {\n          className: \"n-notif-STJ\"\n        }, \"skill to join: \", __jsx(\"strong\", null, skillToJoin))), __jsx(\"div\", {\n          className: \"n-notif-content-secondary\"\n        }, __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.message)), __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"group/contact link\"), __jsx(\"div\", {\n          className: \"n-button-container\"\n        }, __jsx(\"a\", {\n          href: notif.post.contactLink,\n          className: \"n-join-link n-SH\",\n          style: {\n            backgroundColor: GCLinkStats.color\n          }\n        }, __jsx(\"img\", {\n          src: GCLinkStats.icon,\n          className: \"n-JL-icon\",\n          alt: GCLinkStats.title\n        }), __jsx(\"h3\", null, cleanedLink))));\n      } else {\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"sent message\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"to:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userTo.username))), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"message\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.message)));\n      }\n    }\n\n    if (notif.accepted === null) {\n      if (notif.question) {\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"sent question\"), __jsx(\"div\", {\n          className: \"n-notif-user\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"to:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userTo.username)), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username,\n          style: {\n            margin: 0,\n            padding: 0\n          }\n        }), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"question\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.question)));\n      } else {\n        var _skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)];\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"sent join request\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"to:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userTo.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username\n        }), __jsx(\"div\", {\n          className: \"n-notif-STJ-container\"\n        }, __jsx(\"div\", {\n          className: \"n-notif-STJ\"\n        }, \"skill to join: \", __jsx(\"strong\", null, _skillToJoin))), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.message)));\n      }\n    } else {\n      if (notif.question) {\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"sent question\"), __jsx(\"div\", {\n          className: \"n-notif-user\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"to:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userTo.username)), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username,\n          style: {\n            margin: 0,\n            padding: 0\n          }\n        }), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"question\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.question)));\n      } else {\n        var _skillToJoin2 = notif.post.skillNames[notif.proposedContribution.indexOf(1)];\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"sent join request\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"to:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userTo.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username\n        }), __jsx(\"div\", {\n          className: \"n-notif-STJ-container\"\n        }, __jsx(\"div\", {\n          className: \"n-notif-STJ\"\n        }, \"skill to join: \", __jsx(\"strong\", null, _skillToJoin2))), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.message)));\n      }\n    }\n  } else {\n    if (notif.accepted) {\n      if (notif.question) {\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"recieved question\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"from:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userFrom.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username,\n          style: {\n            margin: 0,\n            padding: 0\n          }\n        }), __jsx(\"div\", {\n          className: \"n-notif-content-secondary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"question\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.question)), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"answered\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.answer)));\n      }\n\n      if (notif.post) {\n        var _GCLinkStats = websiteStats(notif.post.contactLink);\n\n        var _cleanedLink = notif.post.contactLink.split('/')[2];\n        var _skillToJoin3 = notif.post.skillNames[notif.proposedContribution.indexOf(1)];\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"recieved join request\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"from:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userFrom.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username\n        }), __jsx(\"div\", {\n          className: \"n-notif-STJ-container\"\n        }, __jsx(\"div\", {\n          className: \"n-notif-STJ\"\n        }, \"skill to join: \", __jsx(\"strong\", null, _skillToJoin3))), __jsx(\"div\", {\n          className: \"n-notif-content-secondary\"\n        }, __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.message)), __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"sent group/contact link\"), __jsx(\"div\", {\n          className: \"n-button-container\"\n        }, __jsx(\"a\", {\n          href: notif.post.contactLink,\n          className: \"n-join-link n-SH\",\n          style: {\n            backgroundColor: _GCLinkStats.color\n          }\n        }, __jsx(\"img\", {\n          src: _GCLinkStats.icon,\n          className: \"n-JL-icon\",\n          alt: _GCLinkStats.title\n        }), __jsx(\"h3\", null, _cleanedLink))));\n      } else {\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"recieved message\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"from:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userFrom.username))), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"message\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.message)));\n      }\n    }\n\n    if (notif.accepted === null) {\n      if (notif.question) {\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"recieved question\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"from:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userFrom.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username,\n          style: {\n            margin: 0,\n            padding: 0\n          }\n        }), __jsx(\"div\", {\n          className: \"n-notif-content-secondary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"question\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.question)), __jsx(\"div\", {\n          className: \"n-notif-reply\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\"\n        }, \"reply\"), __jsx(\"textarea\", _extends({\n          className: \"n-notif-reply-field\"\n        }, answer.fields)), __jsx(\"div\", {\n          className: \"n-button-container\"\n        }, __jsx(\"h3\", {\n          onClick: function onClick() {\n            return handleAnswer();\n          },\n          className: \"n-AoD-option n-SH\",\n          style: {\n            backgroundColor: 'rgb(52,166,95)'\n          }\n        }, \"answer\"))));\n      } else {\n        var _skillToJoin4 = notif.post.skillNames[notif.proposedContribution.indexOf(1)];\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"recieved join request\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"from:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userFrom.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username\n        }), __jsx(\"div\", {\n          className: \"n-notif-STJ-container\"\n        }, __jsx(\"div\", {\n          className: \"n-notif-STJ\"\n        }, \"skill to join: \", __jsx(\"strong\", null, _skillToJoin4))), __jsx(\"div\", {\n          className: \"n-notif-content-secondary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"message\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.message)), __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"accept\"), __jsx(\"div\", {\n          className: \"n-notif-AoD\"\n        }, __jsx(\"h3\", {\n          onClick: function onClick() {\n            return handleDecline();\n          },\n          className: \"n-AoD-option n-SH\",\n          style: {\n            backgroundColor: 'rgb(254,52,77)'\n          }\n        }, \"decline\"), __jsx(\"h3\", {\n          onClick: function onClick() {\n            return handleAccept();\n          },\n          className: \"n-AoD-option n-SH\",\n          style: {\n            backgroundColor: 'rgb(52,166,95)'\n          }\n        }, \"accept\")));\n      }\n    } else {\n      if (notif.question) {\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"recieved question\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(encodeURIComponent(notif.userTo.username))\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"from:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userFrom.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username,\n          style: {\n            margin: 0,\n            padding: 0\n          }\n        }), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"question\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.question)));\n      } else {\n        var _skillToJoin5 = notif.post.skillNames[notif.proposedContribution.indexOf(1)];\n        return __jsx(\"div\", {\n          className: \"n-notif-container\",\n          style: {\n            borderBottom: \"5px solid \".concat(notifStatusColor)\n          }\n        }, __jsx(\"h3\", {\n          className: \"n-notif-header\",\n          style: {\n            backgroundColor: notifStatusColor\n          }\n        }, \"recieved join request\"), __jsx(Link, {\n          href: \"/user/[username]\",\n          as: \"/user/\".concat(notif.userTo.username)\n        }, __jsx(\"a\", {\n          className: \"n-notif-user neutralize-link\"\n        }, __jsx(\"div\", {\n          className: \"NU-label\"\n        }, \"to:\"), __jsx(\"img\", {\n          src: \"/svg/userB.svg\",\n          className: \"NU-icon\",\n          alt: \"user\"\n        }), __jsx(\"div\", {\n          className: \"NU-username\"\n        }, notif.userTo.username))), __jsx(PostSmall, {\n          post: notif.post,\n          user: notif.userTo.username\n        }), __jsx(\"div\", {\n          className: \"n-notif-STJ-container\"\n        }, __jsx(\"div\", {\n          className: \"n-notif-STJ\"\n        }, \"skill to join: \", __jsx(\"strong\", null, _skillToJoin5))), __jsx(\"div\", {\n          className: \"n-notif-content-primary\"\n        }, __jsx(\"h3\", {\n          className: \"n-notif-title\",\n          style: {\n            marginLeft: '15px'\n          }\n        }, \"message\"), __jsx(\"p\", {\n          className: \"n-notif-message\"\n        }, notif.message)));\n      }\n    }\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCurrentUserNotifications: setCurrentUserNotifications,\n  setAlert: setAlert,\n  resetAlert: resetAlert\n})(Notif);","map":null,"metadata":{},"sourceType":"module"}