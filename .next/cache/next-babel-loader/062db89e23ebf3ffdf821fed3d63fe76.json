{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'; // import userIcon from '../../static/svg/userB.svg'\n\nimport { Link } from 'react-router-dom';\n\nconst PostQandA = props => {\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n  const answerStyle = expanded ? {\n    display: 'block'\n  } : {\n    display: 'none'\n  };\n  return __jsx(\"div\", {\n    className: \"PPC-qanda-container\"\n  }, __jsx(Link, {\n    href: \"/user/[username]\",\n    as: `/user/${encodeURIComponent(props.qanda.userFrom.username)}`,\n    className: \"PPC-qanda-header neutralize-link\"\n  }, __jsx(\"img\", {\n    className: \"PPC-user-icon\",\n    src: userIcon,\n    alt: \"user\"\n  }), __jsx(\"p\", {\n    className: \"NM\"\n  }, props.qanda.userFrom.username)), __jsx(\"p\", {\n    className: \"PCC-qanda-content\"\n  }, props.qanda.question), __jsx(\"div\", {\n    className: \"PCC-qanda-answer-container\",\n    style: answerStyle\n  }, __jsx(Link, {\n    href: \"/user/[username]\",\n    as: `/user/${encodeURIComponent(props.qanda.userFrom.username)}`,\n    className: \"PPC-qanda-header neutralize-link\"\n  }, __jsx(\"img\", {\n    className: \"PPC-user-icon\",\n    src: userIcon,\n    alt: \"user\"\n  }), __jsx(\"p\", {\n    className: \"NM\"\n  }, props.qanda.userTo.username)), __jsx(\"p\", {\n    className: \"PCC-qanda-content\"\n  }, props.qanda.answer)), __jsx(\"div\", {\n    onClick: () => setExpanded(!expanded),\n    className: \"PCC-answer-toggle\"\n  }, expanded ? 'hide answer' : 'show answer'));\n}; //const mapStateToProps = (state) => {\n//\treturn {\n//\t}\n//}\n\n\nexport default connect(null)(PostQandA);","map":null,"metadata":{},"sourceType":"module"}