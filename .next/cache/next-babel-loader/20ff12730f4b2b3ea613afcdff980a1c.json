{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SKILL_SEARCH } from '../../src/schemas/queries';\nimport Loading from '../Loading';\n\nvar SkillSugg = function SkillSugg(props) {\n  var splitQuery = props.query.toLowerCase().split(' ');\n  var lastWord = splitQuery.slice(-1) === '' ? splitQuery.slice(-2, -1)[0] : splitQuery.slice(-1)[0];\n\n  var _useState = useState([]),\n      skills = _useState[0],\n      setSkills = _useState[1];\n\n  var skillSearchQuery = useQuery(SKILL_SEARCH, {\n    variables: {\n      filter: lastWord\n    }\n  });\n\n  var skillConditions = function skillConditions(query, reducer) {\n    if (!query) return null;\n    if (!query.skillSearch) return null;\n    return query.skillSearch;\n  };\n\n  var skillsList = skillConditions(skillSearchQuery.data, skills);\n  useEffect(function () {\n    if (skillsList) {\n      setSkills(skillsList);\n    }\n  }, [skillsList, skills]);\n\n  var suggestionsToShow = function suggestionsToShow() {\n    if (skills) {\n      return skills.map(function (s) {\n        return __jsx(\"div\", {\n          onClick: function onClick() {\n            return props.onSuggestionClicked(s.name);\n          },\n          className: \"search-suggestion\",\n          key: \"SS\".concat(s.name)\n        }, s.name);\n      });\n    }\n\n    return __jsx(\"div\", {\n      style: {\n        gridColumn: '1/3'\n      }\n    }, __jsx(\"div\", {\n      style: {\n        height: '5vh'\n      }\n    }), __jsx(Loading, null));\n  };\n\n  var suggestionsStyle = skills.length !== 0 && props.query !== '' && lastWord !== '' ? {\n    display: 'block'\n  } : {\n    display: 'none'\n  };\n  return __jsx(\"div\", {\n    className: \"search-suggestions-container\"\n  }, __jsx(\"div\", {\n    className: \"search-suggestions\",\n    style: suggestionsStyle\n  }, suggestionsToShow()));\n}; //const mapStateToProps = (state) => {\n//\treturn {\n//\t}\n//}\n\n\nexport default connect(null)(SkillSugg);","map":null,"metadata":{},"sourceType":"module"}