{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SKILL_SEARCH } from '../../src/schemas/queries';\nimport Loading from '../Loading';\n\nconst SkillSugg = props => {\n  const splitQuery = props.query.toLowerCase().split(' ');\n  const lastWord = splitQuery.slice(-1) === '' ? splitQuery.slice(-2, -1)[0] : splitQuery.slice(-1)[0];\n  const {\n    0: skills,\n    1: setSkills\n  } = useState([]);\n  const skillSearchQuery = useQuery(SKILL_SEARCH, {\n    variables: {\n      filter: lastWord\n    }\n  });\n\n  const skillConditions = (query, reducer) => {\n    if (!query) return null;\n    if (!query.skillSearch) return null;\n    return query.skillSearch;\n  };\n\n  const skillsList = skillConditions(skillSearchQuery.data, skills);\n  useEffect(() => {\n    if (skillsList) {\n      setSkills(skillsList);\n    }\n  }, [skillsList, skills]);\n\n  const suggestionsToShow = () => {\n    if (skills) {\n      return skills.map(s => __jsx(\"div\", {\n        onClick: () => props.onSuggestionClicked(s.name),\n        className: \"search-suggestion\",\n        key: `SS${s.name}`\n      }, s.name));\n    }\n\n    return __jsx(\"div\", {\n      style: {\n        gridColumn: '1/3'\n      }\n    }, __jsx(\"div\", {\n      style: {\n        height: '5vh'\n      }\n    }), __jsx(Loading, null));\n  };\n\n  const suggestionsStyle = skills.length !== 0 && props.query !== '' && lastWord !== '' ? {\n    display: 'block'\n  } : {\n    display: 'none'\n  };\n  return __jsx(\"div\", {\n    className: \"search-suggestions-container\"\n  }, __jsx(\"div\", {\n    className: \"search-suggestions\",\n    style: suggestionsStyle\n  }, suggestionsToShow()));\n}; //const mapStateToProps = (state) => {\n//\treturn {\n//\t}\n//}\n\n\nexport default connect(null)(SkillSugg);","map":null,"metadata":{},"sourceType":"module"}