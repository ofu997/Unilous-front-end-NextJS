{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN } from '../../../src/schemas/mutations';\nimport { useField, triggerAlert } from '../../../src/functions/functions';\nimport { setToken } from '../../../redux/reducers/token';\nimport InputHeader from '../../text-field/InputHeader';\nimport { setAlert, resetAlert } from '../../../redux/reducers/alertNotif';\nimport UR from '../../../styles/user/user.module.css';\n\nconst SignIn = props => {\n  const username = useField('text');\n  const password = useField('password');\n\n  const onError = e => {\n    let cleanedMessage = e.message;\n    console.log(cleanedMessage);\n    cleanedMessage = cleanedMessage.split(':');\n    cleanedMessage = cleanedMessage.slice(1, cleanedMessage.length).join('$:');\n    triggerAlert('warning', cleanedMessage, props.setAlert, props.resetAlert);\n  };\n\n  const [signInMutation] = useMutation(LOGIN, {\n    onError\n  });\n\n  const handleSumbit = async e => {\n    e.preventDefault();\n    const result = await signInMutation({\n      variables: {\n        username: username.fields.value,\n        password: password.fields.value\n      }\n    });\n\n    if (result) {\n      if (props.changeMenuItem) {\n        props.changeMenuItem(null);\n      }\n\n      const token = result.data.login.value;\n      username.reset();\n      password.reset();\n      localStorage.setItem('token', token);\n      localStorage.setItem('username', username.fields.value);\n      props.setToken(token);\n      window.location.reload();\n    }\n  };\n\n  const bgStyle = props.noBG ? {\n    backgroundColor: '#282828'\n  } : null;\n  return __jsx(\"div\", {\n    className: UR.userFormContainer,\n    style: bgStyle\n  }, __jsx(\"form\", {\n    className: UR.userForm,\n    onSubmit: e => handleSumbit(e)\n  }, __jsx(InputHeader, {\n    inputFor: \"SI-username\",\n    info: false,\n    title: \"username\",\n    color: \"dark\"\n  }), __jsx(\"input\", _extends({\n    className: UR.UFInput\n  }, username.fields, {\n    id: \"SI-username\"\n  })), __jsx(InputHeader, {\n    inputFor: \"SI-password\",\n    info: false,\n    title: \"password\",\n    color: \"dark\"\n  }), __jsx(\"input\", _extends({\n    className: UR.UFInput\n  }, password.fields, {\n    id: \"SI-password\"\n  })), __jsx(\"button\", {\n    className: UR.UFSubmit,\n    type: \"submit\"\n  }, __jsx(\"h3\", null, \"sign in\"))));\n}; // const mapStateToProps = (state) => {\n// \treturn {\n// \t}\n// }\n\n\nexport default connect(null, {\n  setToken,\n  setAlert,\n  resetAlert\n})(SignIn);","map":null,"metadata":{},"sourceType":"module"}