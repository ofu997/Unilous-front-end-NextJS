{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport { useMutation } from '@apollo/react-hooks';\nimport { SAVE_POST } from '../../src/schemas/mutations';\nimport { setCurrentUserSP } from '../../redux/reducers/currentUser';\nimport PS from '../../styles/post.module.css';\nimport { palletteGenerator, triggerAlert } from '../../src/functions/functions';\nimport { setAlert, resetAlert } from '../../redux/reducers/alertNotif';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst Post = props => {\n  const post = props.post;\n  const color = post.color;\n  const colorPalette = palletteGenerator(color).colorPallette;\n\n  const handleError = e => {// console.log(e)\n  };\n\n  const [savePostMutation] = useMutation(SAVE_POST, {\n    onError: handleError\n  });\n\n  const handleSavePost = async () => {\n    if (!props.token) {\n      triggerAlert('warning', 'sign in$: must be signed in to perform this action', props.setAlert, props.resetAlert);\n      return null;\n    }\n\n    const result = await savePostMutation({\n      variables: {\n        user: props.currentUser._id,\n        postId: post._id\n      }\n    });\n\n    if (result) {\n      props.setCurrentUserSP(props.currentUser.savedPosts.concat(post));\n      triggerAlert('success', 'followed$: you are now following this post', props.setAlert, props.resetAlert);\n    }\n  };\n\n  const handleShare = () => {\n    triggerAlert('success', 'copied url$: copied url to dashboard', props.setAlert, props.resetAlert);\n  };\n\n  const mappedSkills = () => {\n    let allSkills = [];\n\n    for (const ind in post.skillNames) {\n      allSkills.push(__jsx(Link, {\n        href: \"/results/[searchQuery]\",\n        as: `/results/${encodeURIComponent(post.skillNames[ind])}`\n      }, __jsx(\"a\", {\n        className: `${PS.postSkillInsContainer} neutralize-link`\n      }, __jsx(\"h4\", {\n        className: PS.PSIName\n      }, post.skillNames[ind]), __jsx(\"div\", {\n        className: PS.PSIStats\n      }, `${post.skillFills[ind]} / ${post.skillCapacities[ind]}`))));\n    }\n\n    return allSkills;\n  };\n\n  let cleanedTime = new Date(Number(post.time));\n  cleanedTime = cleanedTime.toString().split(' '); // cleanedTime = cleanedTime.slice(1,4).join(' ') + ' ' + cleanedTime[4].split(':').slice(0,2).join(':')\n\n  cleanedTime = cleanedTime.slice(1, 3).join(' ') + ', ' + cleanedTime[3];\n\n  if (props.stretch) {\n    return __jsx(\"div\", {\n      className: PS.postWrapper\n    }, __jsx(\"div\", {\n      className: PS.postColorIndicator,\n      style: {\n        backgroundColor: colorPalette.color\n      }\n    }), __jsx(\"div\", {\n      className: PS.postContainer\n    }, __jsx(\"div\", {\n      className: PS.postHeaderWrapper\n    }, __jsx(\"div\", {\n      className: PS.postUtilitiesContainer\n    }, __jsx(\"div\", {\n      onClick: () => handleSavePost(),\n      className: PS.PUIconContainer\n    }, __jsx(\"svg\", {\n      className: PS.PUIcon,\n      fill: colorPalette.color,\n      viewBox: \"0 -28 512.00002 512\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, __jsx(\"path\", {\n      d: \"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\"\n    }))), __jsx(CopyToClipboard, {\n      onCopy: () => handleShare(),\n      text: `http://localhost:3000/post/${encodeURIComponent(post.title)}`,\n      className: PS.PUIconContainer\n    }, __jsx(\"svg\", {\n      className: PS.PUIcon,\n      style: {\n        width: '20px',\n        paddingRight: '5px',\n        paddingLeft: '5px'\n      },\n      fill: colorPalette.color,\n      viewBox: \"0 -22 512 511\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, __jsx(\"path\", {\n      d: \"m512 233.820312-212.777344-233.320312v139.203125h-45.238281c-140.273437 0-253.984375 113.710937-253.984375 253.984375v73.769531l20.09375-22.019531c68.316406-74.851562 164.980469-117.5 266.324219-117.5h12.804687v139.203125zm0 0\"\n    })))), __jsx(\"div\", {\n      className: PS.postHeaderStretch\n    }, __jsx(Link, {\n      href: \"/user/[username]\",\n      as: `/user/${encodeURIComponent(post.user.username)}`\n    }, __jsx(\"a\", {\n      className: `${PS.PHUserStretch} neutralize-link ${PS.postHover}`\n    }, __jsx(\"img\", {\n      className: PS.PHUIcon,\n      src: \"/svg/userB.svg\",\n      alt: \"user\"\n    }), __jsx(\"div\", null, post.user.username))), __jsx(\"div\", {\n      className: PS.PHDate\n    }, cleanedTime))), __jsx(Link, {\n      href: \"/post/[title]\",\n      as: `/post/${encodeURIComponent(post.title)}`\n    }, __jsx(\"a\", {\n      className: \"neutralize-link\"\n    }, __jsx(\"h3\", {\n      className: `${PS.postTitle} ${PS.postHover}`\n    }, post.title))), __jsx(Link, {\n      href: \"/post/[title]\",\n      as: `/post/${encodeURIComponent(post.title)}`\n    }, __jsx(\"a\", {\n      className: `${PS.postDescription} neutralize-link ${PS.postHover}`\n    }, post.description)), __jsx(\"div\", {\n      className: PS.postSkillsContainer\n    }, mappedSkills())));\n  }\n\n  return __jsx(\"div\", {\n    className: PS.postWrapper\n  }, __jsx(\"div\", {\n    className: PS.postColorIndicator,\n    style: {\n      backgroundColor: colorPalette.color\n    }\n  }), __jsx(\"div\", {\n    className: PS.postContainer\n  }, __jsx(\"div\", {\n    className: PS.postHeader\n  }, __jsx(Link, {\n    href: `/user/${encodeURIComponent(post.user.username)}`\n  }, __jsx(\"a\", {\n    className: `${PS.PHUser} neutralize-link ${PS.postHover}`\n  }, __jsx(\"img\", {\n    className: PS.PHUIcon,\n    src: \"/svg/userB.svg\",\n    alt: \"user\"\n  }), __jsx(\"div\", null, post.user.username))), __jsx(\"div\", {\n    className: PS.PHDate\n  }, cleanedTime)), __jsx(Link, {\n    href: \"/post/[title]\",\n    as: `/post/${encodeURIComponent(post.title)}`\n  }, __jsx(\"a\", {\n    className: \"neutralize-link\"\n  }, __jsx(\"h3\", {\n    className: `${PS.postTitle} ${PS.postHover}`\n  }, post.title))), __jsx(Link, {\n    href: \"/post/[title]\",\n    as: `/post/${encodeURIComponent(post.title)}`\n  }, __jsx(\"a\", {\n    className: `${PS.postDescription} neutralize-link ${PS.postHover}`\n  }, post.description)), __jsx(\"div\", {\n    className: PS.postSkillsContainer\n  }, mappedSkills()), __jsx(\"div\", {\n    className: PS.postUtilitiesContainer\n  }, __jsx(\"div\", {\n    onClick: () => handleSavePost(),\n    className: PS.PUIconContainer\n  }, __jsx(\"svg\", {\n    className: PS.PUIcon,\n    fill: colorPalette.color,\n    viewBox: \"0 -28 512.00002 512\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\"\n  }))), __jsx(CopyToClipboard, {\n    onCopy: () => handleShare(),\n    text: `http://localhost:3000/post/${encodeURIComponent(post.title)}`,\n    className: PS.PUIconContainer\n  }, __jsx(\"svg\", {\n    className: PS.PUIcon,\n    style: {\n      width: '20px',\n      paddingRight: '5px',\n      paddingLeft: '5px'\n    },\n    fill: colorPalette.color,\n    viewBox: \"0 -22 512 511\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"m512 233.820312-212.777344-233.320312v139.203125h-45.238281c-140.273437 0-253.984375 113.710937-253.984375 253.984375v73.769531l20.09375-22.019531c68.316406-74.851562 164.980469-117.5 266.324219-117.5h12.804687v139.203125zm0 0\"\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCurrentUserSP,\n  setAlert,\n  resetAlert\n})(Post);","map":null,"metadata":{},"sourceType":"module"}