{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { resetAlert } from '../../redux/reducers/alertNotif';\nimport { clearToken } from '../../redux/reducers/token';\nimport NB from '../../styles/navBar.module.css';\nimport SkillSugg from '../text-field/SkillSugg';\nimport Register from '../user/form/Register';\nimport SignIn from '../user/form/SignIn';\nimport UserNotifList from '../user/utilities/UserNotifList';\nimport UserSP from '../user/utilities/UserSP';\nimport UserContainer from './UserContainer';\n\nvar NavBar = function NavBar(props) {\n  var _useState = useState(null),\n      utilityShown = _useState[0],\n      setUtilityShown = _useState[1];\n\n  var _useState2 = useState(null),\n      menuItemShown = _useState2[0],\n      setMenuItemShown = _useState2[1];\n\n  var changeUtility = function changeUtility(name) {\n    setMenuItemShown(null);\n    if (name === utilityShown) setUtilityShown(null);else setUtilityShown(name);\n  };\n\n  var changeMenuItem = function changeMenuItem(item) {\n    if (item === menuItemShown) setMenuItemShown(null);else setMenuItemShown(item);\n  }; // const linkToPush = `/results/${encodeURIComponent(props.query)}`\n  // my edit\n\n\n  var linkToPush = props.query ? \"/results/\".concat(encodeURIComponent(props.query)) : \"/results/all\";\n\n  var enterQuery = function enterQuery() {\n    Router.push(linkToPush);\n  };\n\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      enterQuery();\n    }\n  };\n\n  var onSuggestionClicked = function onSuggestionClicked(skill) {\n    var splitQuery = props.query.split(' ');\n    var newQuery = splitQuery.length === 1 ? \"\".concat(skill, \" \") : \"\".concat(splitQuery.slice(0, -1).join(' '), \" \").concat(skill, \" \");\n    props.onQueryChange({\n      target: {\n        value: newQuery\n      }\n    });\n  };\n\n  var handleLogout = function handleLogout() {\n    localStorage.clear();\n    props.clearToken();\n  };\n\n  var menuStyle = menuItemShown ? {\n    borderBottomColor: '#282828'\n  } : null;\n  var pendingNotifStats = props.currentUser && props.currentUser.pendingNotifications > 0 ? [NB.PNBubble, props.currentUser.pendingNotifications] : [null, null];\n\n  var ShowInSubNav = function ShowInSubNav() {\n    var moreItemButton = menuItemShown === 'more' ? __jsx(\"img\", {\n      src: \"/svg/moreW.svg\",\n      onClick: function onClick() {\n        return changeMenuItem('more');\n      },\n      className: NB.menuItemSelected,\n      alt: \"more\"\n    }) : __jsx(\"img\", {\n      src: \"/svg/moreSB.svg\",\n      onClick: function onClick() {\n        return changeMenuItem('more');\n      },\n      className: NB.menuItem,\n      alt: \"more\"\n    });\n\n    if (utilityShown === 'menu') {\n      if (props.token) {\n        // const allItems = [\n        //     {name: 'notifications', iconB: bellIconB, iconW: bellIconW},\n        //     {name: 'following', iconB: heartIconB, iconW: heartIconW},\n        // ]\n        var notifItemButton = menuItemShown === 'notifications' ? __jsx(\"div\", {\n          onClick: function onClick() {\n            return changeMenuItem('notifications');\n          },\n          className: \"\".concat(NB.menuItemSelected, \" \").concat(NB.PNContainer)\n        }, __jsx(\"img\", {\n          src: bellIconW,\n          className: NB.notificationItem,\n          alt: 'notifications',\n          key: \"UO\".concat('notifications')\n        }), __jsx(\"div\", {\n          className: pendingNotifStats[0]\n        }, pendingNotifStats[1])) : __jsx(\"div\", {\n          onClick: function onClick() {\n            return changeMenuItem('notifications');\n          },\n          className: \"\".concat(NB.menuItem, \" \").concat(NB.PNContainer)\n        }, __jsx(\"img\", {\n          src: \"/svg/bellB.svg\",\n          className: NB.notificationItem,\n          alt: 'notifications',\n          key: \"UO\".concat('notifications')\n        }), __jsx(\"div\", {\n          className: pendingNotifStats[0]\n        }, pendingNotifStats[1]));\n        var followingItemButton = menuItemShown === 'following' ? __jsx(\"img\", {\n          src: \"/svg/heartW.svg\",\n          onClick: function onClick() {\n            return changeMenuItem('following');\n          },\n          className: NB.menuItemSelected,\n          alt: 'following',\n          key: \"UO\".concat('following')\n        }) : __jsx(\"img\", {\n          src: \"/svg/heartB.svg\",\n          onClick: function onClick() {\n            return changeMenuItem('following');\n          },\n          className: NB.menuItem,\n          alt: 'following',\n          key: \"UO\".concat('following')\n        });\n        return __jsx(\"div\", {\n          className: NB.navBarSubContainerM,\n          style: menuStyle\n        }, __jsx(Link, {\n          href: \"/post-form/\",\n          onClick: function onClick() {\n            return changeMenuItem(null);\n          }\n        }, __jsx(\"a\", {\n          className: NB.menuItem,\n          style: {\n            padding: 0,\n            margin: 0\n          }\n        }, __jsx(\"img\", {\n          src: \"/svg/plusB.svg\",\n          className: NB.menuItem,\n          alt: \"add project\"\n        }))), __jsx(Link, {\n          href: \"user/[username]\",\n          as: \"/user/\".concat(props.currentUser.username),\n          onClick: function onClick() {\n            return changeMenuItem(null);\n          }\n        }, __jsx(\"a\", {\n          className: NB.menuItem,\n          style: {\n            padding: 0,\n            margin: 0\n          }\n        }, __jsx(\"img\", {\n          src: userIcon,\n          className: \"menu-item\",\n          alt: \"user page\"\n        }))), notifItemButton, followingItemButton, __jsx(\"img\", {\n          src: exitIcon,\n          onClick: function onClick() {\n            return handleLogout();\n          },\n          className: NB.menuItem,\n          alt: \"log out\"\n        }), moreItemButton);\n      }\n\n      var allItems = ['sign in', 'register'];\n      var modalItemButtons = allItems.map(function (i) {\n        return menuItemShown === i ? __jsx(\"h3\", {\n          onClick: function onClick() {\n            return changeMenuItem(i);\n          },\n          className: NB.menuItemSelected,\n          key: \"MI\".concat(i)\n        }, i) : __jsx(\"h3\", {\n          onClick: function onClick() {\n            return changeMenuItem(i);\n          },\n          className: NB.menuItem,\n          key: \"MI\".concat(i)\n        }, i);\n      });\n      return __jsx(\"div\", {\n        className: \"\".concat(NB.navBarSubContainerM, \" \").concat(NB.loginBar),\n        style: menuStyle\n      }, modalItemButtons, moreItemButton);\n    }\n\n    return null;\n  };\n\n  var MenuItemToShow = function MenuItemToShow() {\n    if (menuItemShown === 'sign in') {\n      return __jsx(\"div\", {\n        className: NB.menuModalContainer\n      }, __jsx(SignIn, {\n        noBG: true,\n        changeMenuItem: changeMenuItem\n      }));\n    }\n\n    if (menuItemShown === 'register') {\n      return __jsx(\"div\", {\n        className: NB.menuModalContainer\n      }, __jsx(Register, {\n        noBG: true,\n        changeMenuItem: changeMenuItem\n      }));\n    }\n\n    if (menuItemShown === 'notifications') {\n      return __jsx(\"div\", {\n        className: NB.menuModalContainer\n      }, __jsx(\"h2\", null, \"notifications\"), __jsx(UserNotifList, null));\n    }\n\n    if (menuItemShown === 'following') {\n      return __jsx(\"div\", {\n        className: NB.menuModalContainer\n      }, __jsx(\"h2\", null, \"saved posts\"), __jsx(UserSP, null));\n    }\n\n    if (menuItemShown === 'more') {\n      return __jsx(\"div\", {\n        className: NB.menuModalContainer\n      }, __jsx(Link, {\n        href: \"/contact/\"\n      }, __jsx(\"a\", {\n        className: \"neutralize-link\"\n      }, __jsx(\"h1\", {\n        className: NB.moreLink\n      }, \"contact us\"))));\n    }\n\n    return null;\n  };\n\n  var showWhenSB = utilityShown === 'search' ? {\n    display: 'block'\n  } : {\n    display: 'none'\n  };\n  var alertBarStyle = props.alertNotif.color ? {\n    backgroundColor: props.alertNotif.color,\n    color: props.alertNotif.textColor\n  } : {\n    display: 'none',\n    backgroundColor: props.alertNotif.color,\n    color: props.alertNotif.textColor\n  };\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"\".concat(NB.navContainer, \" HWM\")\n  }, __jsx(\"div\", {\n    className: NB.navBarContainer\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: NB.iconContainer\n  }, __jsx(\"img\", {\n    src: \"/svg/logo/logoB.svg\",\n    alt: \"icon\",\n    className: NB.navBarIcon\n  }))), __jsx(\"div\", {\n    className: NB.searchBar\n  }, __jsx(Link, {\n    href: linkToPush,\n    onClick: function onClick() {\n      return enterQuery();\n    }\n  }, __jsx(\"a\", {\n    className: \"neutralize-link \".concat(NB.enterSearch, \" \").concat(NB.searchHover)\n  }, __jsx(\"img\", {\n    src: \"/svg/searchW.svg\",\n    className: NB.searchIcon,\n    alt: \"search\"\n  }))), __jsx(\"div\", {\n    className: NB.searchHr,\n    style: {\n      backgroundColor: 'white'\n    }\n  }), __jsx(\"input\", {\n    value: props.query,\n    className: NB.searchInput,\n    type: \"text\",\n    onChange: function onChange(e) {\n      return props.onQueryChange(e);\n    },\n    onKeyPress: function onKeyPress(e) {\n      return handleKeyPress(e);\n    },\n    placeholder: \"search or enter nothing for all results\"\n  }), __jsx(\"div\", {\n    className: NB.SBSeparator\n  }), __jsx(SkillSugg, {\n    query: props.query,\n    onSuggestionClicked: onSuggestionClicked\n  })), __jsx(UserContainer, null)), __jsx(\"div\", {\n    className: NB.alertBarContainer,\n    style: alertBarStyle\n  }, __jsx(\"div\", {\n    className: NB.message\n  }, props.alertNotif.message), __jsx(\"h2\", {\n    onClick: function onClick() {\n      return props.resetAlert();\n    },\n    className: NB.close\n  }, \"x\"))), __jsx(\"div\", {\n    className: \"\".concat(NB.navContainerM, \" SWM\")\n  }, __jsx(\"div\", {\n    className: NB.navBarContainerM\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"\".concat(NB.NBBrand, \" neutralize-link\")\n  }, __jsx(\"img\", {\n    src: \"/svg/logo/logoB.svg\",\n    className: NB.NBLogo,\n    alt: \"logo\"\n  }), __jsx(\"h2\", null, \"Unilous\"))), __jsx(\"div\", {\n    className: NB.NBPrimaryUtilities\n  }, __jsx(\"img\", {\n    src: \"/svg/searchSB.svg\",\n    onClick: function onClick() {\n      return changeUtility('search');\n    },\n    className: NB.PUSearch,\n    alt: \"search\"\n  }), __jsx(\"div\", {\n    onClick: function onClick() {\n      return changeUtility('menu');\n    },\n    className: \"\".concat(NB.PUHamburgerContainer, \" \").concat(NB.PNContainer)\n  }, __jsx(\"img\", {\n    src: \"/svg/hamburger.svg\",\n    className: NB.PUHamburger,\n    alt: \"menu\"\n  }), __jsx(\"div\", {\n    className: \"\".concat(pendingNotifStats[0], \" \").concat(NB.PNBubbleHamburger)\n  }, pendingNotifStats[1])))), __jsx(\"div\", {\n    onClick: function onClick() {\n      return props.resetAlert();\n    },\n    className: NB.alertBarContainer,\n    style: alertBarStyle\n  }, __jsx(\"div\", {\n    className: NB.message\n  }, props.alertNotif.message), __jsx(\"h2\", {\n    className: NB.close\n  }, \"x\")), __jsx(\"div\", {\n    className: NB.navBarSubContainer,\n    style: showWhenSB\n  }, __jsx(\"div\", {\n    className: NB.searchBar\n  }, __jsx(Link, {\n    href: linkToPush,\n    onClick: function onClick() {\n      return enterQuery();\n    }\n  }, __jsx(\"a\", {\n    className: \"neutralize-link \".concat(NB.enterSearch, \" \").concat(NB.searchHover)\n  }, __jsx(\"img\", {\n    src: \"/svg/searchW.svg\",\n    className: NB.searchIcon,\n    alt: \"search\"\n  }))), __jsx(\"div\", {\n    className: NB.searchHr,\n    style: {\n      backgroundColor: 'white',\n      height: '0'\n    }\n  }), __jsx(\"input\", {\n    value: props.query,\n    className: NB.searchInput,\n    type: \"text\",\n    onChange: function onChange(e) {\n      return props.onQueryChange(e);\n    },\n    onKeyPress: function onKeyPress(e) {\n      return handleKeyPress(e);\n    },\n    placeholder: \"search or enter nothing for all results\"\n  }), __jsx(SkillSugg, {\n    query: props.query,\n    onSuggestionClicked: onSuggestionClicked\n  }))), __jsx(ShowInSubNav, null), __jsx(MenuItemToShow, null)));\n}; // NavBar = withRouter(NavBar)\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    token: state.token,\n    alertNotif: state.alertNotif\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearToken: bindActionCreators(clearToken, dispatch),\n    resetAlert: bindActionCreators(resetAlert, dispatch)\n  };\n};\n\nclearToken;\nresetAlert;\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","map":null,"metadata":{},"sourceType":"module"}