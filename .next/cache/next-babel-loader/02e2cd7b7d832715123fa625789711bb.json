{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withApollo } from \"next-apollo\"; // import ApolloClient, { HttpLink, InMemoryCache } from \"apollo-boost\"\n\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context'; // https://unilous-back-end-dev.herokuapp.com/graphql\n// https://projectu-back-end-2020.herokuapp.com/graphql\n\nvar httpLink = createHttpLink({\n  uri: 'https://projectu-back-end-2020.herokuapp.com/graphql'\n});\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  var token = null; // const token = localStorage.getItem('token')\n\n  return {\n    headers: _objectSpread(_objectSpread({}, headers), {}, {\n      authorization: token ? \"berySecret \".concat(token) : null\n    })\n  };\n});\nexport var apolloClient = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n}); // const apolloClient = new ApolloClient({\n//   uri: 'https://projectu-back-end-2020.herokuapp.com/graphql',\n//   cache: new InMemoryCache(),\n//   ssrMode: true\n// })\n\nexport default withApollo(apolloClient);","map":null,"metadata":{},"sourceType":"module"}